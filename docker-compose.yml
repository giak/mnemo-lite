version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  db:
    image: postgres:17
    container_name: mnemo-postgres
    user: postgres:postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${PG_CPU_LIMIT:-2}'
          memory: ${PG_MEM_LIMIT:-2G}
        reservations:
          memory: 1G
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mnemo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mnemopass}
      POSTGRES_DB: ${POSTGRES_DB:-mnemolite}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - ./db/scripts:/scripts:ro
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mnemo} -d ${POSTGRES_DB:-mnemolite}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres -c shared_preload_libraries=pg_cron,pg_partman_bgw,pgmq.pg_queue
               -c pg_partman_bgw.interval=3600
               -c pg_partman_bgw.role=${POSTGRES_USER:-mnemo}
               -c pg_cron.use_background_workers=on
               -c shared_buffers=512MB
               -c work_mem=16MB
               -c effective_cache_size=1GB
               -c maintenance_work_mem=128MB
               -c max_parallel_workers_per_gather=4
    shm_size: 1gb
    networks:
      backend:
        aliases:
          - database
    logging: *default-logging

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: mnemo-chroma
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${CHROMA_CPU_LIMIT:-1}'
          memory: ${CHROMA_MEM_LIMIT:-1G}
    volumes:
      - chroma_data:/chroma/chroma
    ports:
      - "127.0.0.1:${CHROMA_PORT:-8000}:8000"
    environment:
      - CHROMA_DB_IMPL=duckdb+parquet
      - CHROMA_PERSIST_DIRECTORY=/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      backend:
        aliases:
          - chromadb
    logging: *default-logging

  redis:
    image: redis:7-alpine
    container_name: mnemo-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "127.0.0.1:${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '${REDIS_CPU_LIMIT:-0.5}'
          memory: ${REDIS_MEM_LIMIT:-512M}
    networks:
      backend:
        aliases:
          - redis
    logging: *default-logging

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: mnemo-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mnemo}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - REDIS_DB=${REDIS_DB:-0}
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CHROMA_HOST=chromadb
    depends_on:
      - db
      - redis
      - chromadb
    volumes:
      - ./api:/app
      - ${CERTS_PATH:-./certs}:/certs
    deploy:
      resources:
        limits:
          cpus: ${API_CPU_LIMIT:-0.5}
          memory: ${API_MEM_LIMIT:-512M}
    networks:
      - backend
      - frontend

  worker:
    build:
      context: ./workers
      dockerfile: Dockerfile
    container_name: mnemo-worker
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mnemo}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - REDIS_DB=${REDIS_DB:-0}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CHROMA_HOST=chromadb
    depends_on:
      - db
      - redis
      - chromadb
    volumes:
      - ./workers:/app
      - ${CERTS_PATH:-./certs}:/certs
    deploy:
      resources:
        limits:
          cpus: ${WORKER_CPU_LIMIT:-0.5}
          memory: ${WORKER_MEM_LIMIT:-512M}
    networks:
      - backend
    logging: *default-logging

networks:
  frontend:
  backend:
    internal: true
  mnemo-network:
    driver: bridge

volumes:
  postgres_data:
  chroma_data:
  redis_data:
  api_cache:
  worker_data:
  postgres-data:
  chroma-data:
  redis-data:
  pgadmin-data: 