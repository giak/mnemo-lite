{
  "permissions": {
    "allow": [
      "Bash(docker-compose exec:*)",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker-compose logs:*)",
      "Bash(services/lexical_search_service.py )",
      "Bash(services/vector_search_service.py )",
      "Bash(services/rrf_fusion_service.py )",
      "Bash(services/hybrid_code_search_service.py )",
      "Bash(routes/code_search_routes.py)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git check-ignore:*)",
      "Bash(cloc:*)",
      "Bash(find:*)",
      "Bash(pytest:*)",
      "Bash(docker exec:*)",
      "Bash(./test_application.sh:*)",
      "mcp__web-search__search",
      "Bash(docker compose ps:*)",
      "Bash(docker compose:*)",
      "Bash(time docker compose build:*)",
      "Bash(docker ps:*)",
      "Bash(docker images:*)",
      "Bash(docker image inspect:*)",
      "Bash(awk:*)",
      "Bash(docker history:*)",
      "Bash(docker stats:*)",
      "Bash(docker inspect:*)",
      "Bash(cp:*)",
      "Bash(docker logs:*)",
      "Bash(make build:*)",
      "Bash(make restart:*)",
      "Bash(tee:*)",
      "WebSearch",
      "Bash(tree:*)",
      "Bash(make down:*)",
      "Bash(make:*)",
      "Bash(git ls-tree:*)",
      "Bash(git log:*)",
      "Bash(EMBEDDING_MODE=mock docker compose:*)",
      "Bash(export EMBEDDING_MODE=mock)",
      "Bash(EMBEDDING_MODE=mock pytest:*)",
      "Read(//home/giak/.config/**)",
      "Bash(for file in docs/agile/serena-evolution/03_EPICS/EPIC-11_STORY_11.*_COMPLETION_REPORT.md)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(for file in docs/agile/serena-evolution/03_EPICS/EPIC-11_STORY_*.md)",
      "Bash(xargs:*)",
      "Bash(git checkout:*)",
      "Bash(for file in .claude/skills/mnemolite-gotchas/domains/*.md)"
    ],
    "deny": [],
    "ask": []
  },
  "disableAllHooks": true,
  "outputStyle": "default"
}
